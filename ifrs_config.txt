sudo yum install python39 && sudo yum install python39-pip

git clone https://i-bm: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@github.com/philipquansahme/ifrs1.5.git
mv ifrs ifrsone && cd ifrsone
virtualenv env
source env/bin/activate


pip3 install --upgrade pip

pip3 install -r requirements.txt &&
python3 manage.py makemigrations ifrs &&
python3 manage.py migrate ifrs &&
python3 manage.py makemigrations &&
python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:5000
python3 manage.py runserver 0.0.0.0:8000




# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    upstream ifrs_project {
    server localhost:8000;
}

error_log /var/log/nginx/error.log;

server {
    listen       3010;
    listen  [::]:3010 default_server;
    server_name  _;
    root   /www/data/;
    access_log /var/log/nginx/access.log;
	
    #set client upload size
    client_max_body_size 500M;

    location / {
        proxy_pass http://ifrs_project;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_connect_timeout 6000s;
        proxy_read_timeout 6000s;
    }


  location /static/ {
        alias /opt/ifrs/ifrs/static/;
    }

location /media/ {
        alias /opt/ifrs/media/;
    }


    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
}



cd /opt/ifrs
/opt/ifrs/venv/bin/gunicorn mysite.wsgi:application -b 0.0.0.0:8000 --workers=3 --threads 100 --worker-connection 1000 --access-logfile /var/log//gunicorn-access.log --error-logfile /var/log/gunicorn-error.log --daemon
setsebool httpd_can_network_connect on -P
setenforce 0
systemctl restart nginx
systemctl daemon-reload
